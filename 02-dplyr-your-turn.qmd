---
title: "Your turn: Data transformation with dplyr"
format:
  html:
    embed-resources: true
    toc: true
execute:
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

```{r}
#| label: load-packages
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
```

## Import

In this exercise we use data of the UNICEF/WHO Joint Monitoring Programme (JMP) for Water Supply, Sanitation and Hygiene (WASH). The data is available at <https://washdata.org/data> and published as an R data package at <https://github.com/WASHNote/jmpwashdata/>.

The data set `jmp_wld_sanitation_long` is available in the `data` folder of this repository. The data set is in long format and contains the following variables:

-   `name`: country name
-   `iso3`: ISO3 country code
-   `year`: year of observation
-   `region_sdg`: SDG region
-   `residence`: residence type (national, rural, urban)
-   `varname_short`: short variable name (JMP naming convention)
-   `varname_long`: long variable name (JMP naming convention)

We use the `read_csv()` function to import the data set into R.

```{r}
sanitation <- read_csv("data/jmp_wld_sanitation_long.csv")
```

## Transform

### Task 1.1

1.  Run all code chunks above.
2.  Use the `filter()` function to create a subset from the `sanitation` data containing national estimates for the year 2020.
3.  Store the result as a new object in your environment with the name `sanitation_national_2020`

```{r}

```

### Task 1.2

1.  Use the `filter()` function to create a subset from the `sanitation` data containing urban and rural estimates for Nigeria.
2.  Store the result as a new object in your environment with the name `sanitation_nigeria_urban_rural`

```{r}

```

### Task 1.3 (stretch goal)

1.  Use the `ggplot()` function to create a connected scatterplot with `geom_point()` and `geom_line()` for the data you created in Task 1.2.

2.  Use the `aes()` function to map the year variable to the x-axis, the `percent` variable to the y-axis, and the `varname_short` variable to color and group aesthetic.

3.  Use `facet_wrap()` to create a separate plot urban and rural populations.

4.  Change the colors using `scale_color_colorblind()`.

```{r}


```

## Communicate

-   Let's render
