---
title: "Your turn: Data transformation with dplyr"
format:
  html:
    embed-resources: true
    toc: true
execute:
  warning: false
editor_options: 
  chunk_output_type: console
editor: visual
---

```{r}
#| label: load-packages
library(readr)
library(dplyr)
library(ggplot2)
library(ggthemes)
```

## Import

In this exercise we use data of the UNICEF/WHO Joint Monitoring Programme (JMP) for Water Supply, Sanitation and Hygiene (WASH). The data is available at <https://washdata.org/data> and published as an R data package at <https://github.com/WASHNote/jmpwashdata/>.

The data set `jmp_wld_sanitation_long` is available in the `data` folder of this repository. The data set is in long format and contains the following variables:

-   `name`: country name
-   `iso3`: ISO3 country code
-   `year`: year of observation
-   `region_sdg`: SDG region
-   `residence`: residence type (national, rural, urban)
-   `varname_short`: short variable name (JMP naming convention)
-   `varname_long`: long variable name (JMP naming convention)

We use the `read_csv()` function to import the data set into R.

```{r}
sanitation <- read_csv("data/jmp_wld_sanitation_long.csv")
```

## Transform

### Task 1.1

1.  Run all code chunks above.

2.  Use the `filter()` function to create a subset from the `sanitation` data containing national estimates for the year 2020. Filter for rows where `residence` equals "national" and `year` equals 2020.

3.  Run the code and observe the result in your the Console (bottom-left window).

```{r}

```

4.  Write the code again, but now store the result as a new object in your environment with the name `sanitation_national_2020`.

5.  Run the code and observe the result in your Environment (top-right window).

```{r}

```

### Task 1.2

1.  Use the `filter()` function to create a subset from the `sanitation` data containing urban and rural estimates for Nigeria. Filter for rows where `name` equals "Nigeria" and `residence` is either "urban" or "rural".

2.  Run the code and observe the result in your Console (bottom-left window).

```{r}

```

3.  Write the code again, but now store the result as a new object in your environment with the name `sanitation_nigeria_urban_rural`.

4.  Run the code and observe the result in your Environment (top-right window).

```{r}

```

### Task 1.3 (stretch goal)

1.  Start with `ggplot()` and use the `sanitation_nigeria_urban_rural` data from Task 1.2.

2.  Inside `ggplot()`, use `aes()` to map:

    -   `year` to the x-axis
    -   `percent` to the y-axis
    -   `varname_short` to both the color and group aesthetics

3.  Add `geom_point()` to show data points.

4.  Add `geom_line()` to connect the points for each sanitation type.

5.  Use `facet_wrap(~ residence)` to create separate panels for urban and rural populations.

6.  Add `scale_color_colorblind()` from the ggthemes package to use colorblind-friendly colors.

```{r}


```

## Communicate

-   Let's render
